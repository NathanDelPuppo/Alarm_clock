# -*- coding: utf-8 -*-
"""
Created on Thu Oct  1 22:51:02 2020

@author: nat87
"""

"""______________________ Alarm clock with python (tkinter)_____________________"""


from tkinter import *
from tkinter import messagebox
import datetime
import time
import winsound




def alarm(set_alarm_timer):
    while 1:
        time.sleep(1)  # Attente d'une seconde
        current_time = datetime.datetime.now()  # Date et temps en ce moment
        now = current_time.strftime("%H:%M:%S")  # Formatage pour rendre plus visible
        date = current_time.strftime("%d/%m/%Y")
        
        
        if now == set_alarm_timer:
            messagebox.showinfo("Nap ended", "It's time to wake up")
            winsound.PlaySound("sound.wav", winsound.SND_ASYNC)
            winsound.PlaySound("sound.wav", winsound.SND_ASYNC)# play le sound de windows
            break
            
        
def actual_time():
    set_alarm_timer = f"{hour.get()}:{min.get()}:{sec.get()}"
    alarm(set_alarm_timer)
    
    
def tick():
    s = time.strftime('%H:%M:%S')
    if s != clock["text"]:
        clock["text"] = s
    clock.after(200, tick)

    
    


"""___________________________________Tkinter program__________________________________________"""


root = Tk()
root.title("Alarm Clock")
root.geometry("600x400")
root.configure(background = "light blue")
root.minsize(300, 100)

time_format = Label(root, text="Enter the time in 24 hours format :", fg = "black", bg = "light blue", font = "Arial 20").grid(row=0, column=0)

add_time = Label(root, text="Hour      Min      Sec", font="60", bg="light blue", fg="black").grid(row=1, column=0)


# Variables pour l'alarme

hour = StringVar()
min = StringVar()
sec = StringVar()


# Champ pour rentrer les valeurs de hour, min et sec

Entry(root, textvariable=hour, bg="light green", width=10).place(x=120, y=70)
Entry(root, textvariable=min, bg="light green", width=10).place(x=190, y=70)
Entry(root, textvariable=sec, bg="light green", width=10).place(x=260, y=70)

# Création du bouton permettant d'appeler les fonctions précedemment crées 

Button1 = Button(root, text="Set your alarm", font="Arial 15", command=actual_time).place(x=400, y=65)

# Horloge en bas de la fenetre 

clock = Label(root, font=('arial', 100, 'bold'), bg='green')
clock.place(x= 30, y=150)
def tick():
    s = time.strftime('%H:%M:%S')
    if s != clock["text"]:
        clock["text"] = s
    clock.after(200, tick)


tick()
root.mainloop()
